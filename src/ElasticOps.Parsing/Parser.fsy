%{
open ElasticOps.Parsing.Structures

%}

%start start

%token <int> INT
%token <float> FLOAT
%token <string> ID
%token <string> STRING
%token <string> UNTERMINATED_STRING
%token TRUE
%token FALSE
%token NULL
%token LEFT_BRACE
%token RIGHT_BRACE
%token LEFT_BRACK
%token RIGHT_BRACK
%token COLON
%token COMMA
%token <string * ElasticOps.Parsing.Structures.JsonValueType> UNFINISHED_VALUE
%token EOF

%type <ElasticOps.Parsing.Structures.JsonValue option> start

%%
start: prog {  $1 }

prog:
  | EOF   { None }
  | value { Some $1 }

value:
  | LEFT_BRACE object_fields RIGHT_BRACE { Assoc $2 }
  | LEFT_BRACE object_fields             { Assoc $2 }
  | LEFT_BRACK array_values RIGHT_BRACK  { Array $2 }
  | LEFT_BRACK array_values              { Array $2 }
  | STRING                               { String $1 }
  | INT                                  { Int $1 }
  | FLOAT                                { Float $1 }
  | TRUE                                 { Bool true }
  | FALSE                                { Bool false }
  | NULL                                 { Null }
  | UNFINISHED_VALUE                     { UnfinishedValue $1 }

object_fields: rev_object_fields { List.rev $1 };

rev_object_fields:
  |                                             { [] }
  | STRING COLON value                          { [PropertyWithValue($1,$3)] }
  | STRING COLON                                { [PropertyNameWithColon($1)] }
  | STRING                                      { [PropertyName($1)] }
  | UNTERMINATED_STRING                         { [UnfinishedPropertyName($1)] }
  | rev_object_fields COMMA STRING COLON value  { PropertyWithValue($3,$5) :: $1 }
  | rev_object_fields COMMA                     { $1 }
  | rev_object_fields COMMA STRING              { PropertyName($3) :: $1 }
  | rev_object_fields COMMA STRING COLON        { PropertyNameWithColon($3) :: $1 }
  | rev_object_fields COMMA UNTERMINATED_STRING { UnfinishedPropertyName($3) :: $1 }

array_values:
  |                  { [] }
  | rev_values       { List.rev $1 }
  | rev_values COMMA { List.rev $1 }

rev_values:
  | value                  { [$1] }
  | rev_values COMMA value { $3 :: $1 }
